# Accuracy comparison of Decision Tree and Random Forest
# Draws a graph of max_depth and accuracy score
import pandas as pd
df = pd.read_csv('C:\\Users\\u\\Downloads\\diabetes.csv')
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

df_cols=['Pregnancies','Glucose','BloodPressure', 'SkinThickness'
         ,'Insulin','BMI','DiabetesPedigreeFunction','Age','Outcome']
df_col2=['Pregnancies','Glucose','BloodPressure', 'SkinThickness'
         ,'Insulin','BMI','DiabetesPedigreeFunction','Age']

out_df = pd.DataFrame(df)

from sklearn.model_selection import train_test_split
out_df_drop = out_df.drop(['Outcome'],axis=1)

diabetes_data = out_df_drop.to_numpy()
diabetes_label = out_df['Outcome'].to_numpy()

X_train, X_test = train_test_split(diabetes_data,test_size=0.3, random_state=3)
Y_train, Y_test = train_test_split(diabetes_label, test_size=0.3, random_state=3)

from sklearn import tree
from sklearn.tree import DecisionTreeClassifier

empty1 =[]
for j in range(1,21):
    classifier = DecisionTreeClassifier(max_depth=j,random_state=3)
    classifier.fit(X_train,Y_train)
    predict1 = classifier.predict(X_test)
    empty1.append(accuracy_score(Y_test,predict1))


empty2 = []
for i in range(1,21):
    Rclassifier = RandomForestClassifier(n_estimators = 20, max_depth=i,random_state=3)
    Rclassifier.fit(X_train, Y_train)
    predict2 = Rclassifier.predict(X_test)
    empty2.append(accuracy_score(Y_test,predict2))

import matplotlib.pyplot as plt
plt.plot(empty1,label='Decision Tree')
plt.plot(empty2,label='Random Forest')
plt.xlabel('Max Depth')
plt.ylabel('Accuracy Score')
